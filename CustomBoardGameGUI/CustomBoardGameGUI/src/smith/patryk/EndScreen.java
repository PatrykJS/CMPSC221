/*
 */
package smith.patryk;

import java.awt.Font;
import java.awt.Graphics;
import java.awt.image.BufferedImage;
import java.io.BufferedInputStream;
import java.io.IOException;
import java.io.InputStream;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.imageio.ImageIO;
import javax.sound.sampled.AudioInputStream;
import javax.sound.sampled.AudioSystem;
import javax.sound.sampled.Clip;
import javax.sound.sampled.LineUnavailableException;
import javax.sound.sampled.UnsupportedAudioFileException;

/**
 *
 * @author Patryk Smith
 */
public class EndScreen extends javax.swing.JPanel {
    private int score;
    private BufferedImage background;
    private InputStream audioInDirect;
    private AudioInputStream audioInBuffer;
    private Clip song;
    private final String audioClip = "/resources/WinSong.wav";
    
    /**
     * Creates new form EndScreen
     * @param _score
     */
    public EndScreen(int _score){
        super();
        initComponents();
        score = _score;
        try {
            //System.out.println(AudioSystem.getAudioInputStream(getClass().getResourceAsStream("/resources/TitleScreen1.wav")));
            audioInDirect = getClass().getResourceAsStream(audioClip);
            InputStream bufferedIn = new BufferedInputStream(audioInDirect);
            audioInBuffer = AudioSystem.getAudioInputStream(bufferedIn);
            song = AudioSystem.getClip();
            song.open(audioInBuffer);
            song.stop();
        } catch (UnsupportedAudioFileException | IOException | LineUnavailableException ex) {
            Logger.getLogger(Starting.class.getName()).log(Level.SEVERE, null, ex);
        }
        //song.loop(1);
        
    }
   
    public void setScore(int _score) throws IOException{
        
        InputStream url = getClass().getResourceAsStream("/resources/background.png");
        background = ImageIO.read(url);
        score = _score;
    }
    
    @Override
    public void paintComponents(Graphics g){
        g.drawImage(background, 0, 0, null);
        g.setFont(new Font("Forte", Font.ITALIC, 18));
        g.drawString(score+"", background.getHeight(), background.getWidth());
        //System.out.println("DRAWING!");
    }
    
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        jLabel2 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();

        setLayout(new java.awt.GridBagLayout());

        jLabel2.setFont(new java.awt.Font("Forte", 3, 48)); // NOI18N
        jLabel2.setText("You Win!");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 0;
        add(jLabel2, gridBagConstraints);

        jLabel1.setFont(new java.awt.Font("Forte", 3, 18)); // NOI18N
        jLabel1.setText("Score:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 2;
        add(jLabel1, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 2;
        add(jLabel4, gridBagConstraints);
    }// </editor-fold>//GEN-END:initComponents

    public void startSong(){
        song.start();
    }
    public void stopSong(){
        song.stop();
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel4;
    // End of variables declaration//GEN-END:variables
}
